version: '3.8'

services:
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@localhost:9093
      - KAFKA_CFG_LISTENERS=INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:29092,CONTROLLER://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INSIDE://kafka:9092,OUTSIDE://localhost:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LOG_DIRS=/tmp/kraft-combined-logs
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INSIDE

  backend-consumer:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    command: ["python", "-m", "backend.entrypoint.consumer"]
    depends_on:
      - kafka

  backend-app:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    command: ["python", "-m", "backend.entrypoint.app"]
    ports:
      - "8000:8000"
    depends_on:
      - kafka

  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
    ports:
      - "8080:8080"